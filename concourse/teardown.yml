---
templates:
  ci:
    security_user: &teardown_security_user
      SECURITY_USER_NAME: ((teardown_security_user_name))
      SECURITY_USER_PASSWORD: ((teardown_security_user_password))

    service_endpoints_for_python: &teardown_service_endpoints_for_python
      ACTION_SERVICE_HOST: rm-action-service-teardown-migration.apps.devtest.onsclofo.uk
      ACTION_SERVICE_PORT: '80'
      ACTION_EXPORTER_HOST: rm-actionexporter-service-teardown-migration.apps.devtest.onsclofo.uk
      ACTION_EXPORTER_PORT: '80'
      BACKSTAGE_SERVICE_HOST: ras-backstage-teardown-migration.apps.devtest.onsclofo.uk
      BACKSTAGE_SERVICE_PORT: '80'
      CASE_SERVICE_HOST: rm-case-service-teardown-migration.apps.devtest.onsclofo.uk
      CASE_SERVICE_PORT: '80'
      COLLECTION_EXERCISE_SERVICE_HOST: rm-collection-exercise-service-teardown-migration.apps.devtest.onsclofo.uk
      COLLECTION_EXERCISE_SERVICE_PORT: '80'
      COLLECTION_EXERCISE_HOST: rm-collection-exercise-service-teardown-migration.apps.devtest.onsclofo.uk
      COLLECTION_EXERCISE_PORT: '80'
      COLLECTION_INSTRUMENT_SERVICE_HOST: ras-collection-instrument-teardown-migration.apps.devtest.onsclofo.uk
      COLLECTION_INSTRUMENT_SERVICE_PORT: '80'
      DJANGO_SERVICE_HOST: django-oauth2-test-teardown-migration.apps.devtest.onsclofo.uk
      DJANGO_SERVICE_PORT: '80'
      FRONTSTAGE_API_SERVICE_HOST: ras-frontstage-api-teardown-migration.apps.devtest.onsclofo.uk
      FRONTSTAGE_API_SERVICE_PORT: '80'
      FRONTSTAGE_SERVICE_HOST: ras-frontstage-teardown-migration.apps.devtest.onsclofo.uk
      FRONTSTAGE_SERVICE_PORT: '80'
      IAC_SERVICE_HOST: iac-service-teardown-migration.apps.devtest.onsclofo.uk
      IAC_SERVICE_PORT: '80'
      NOTIFY_GATEWAY_SERVICE_HOST: rm-notify-gateway-teardown-migration.apps.devtest.onsclofo.uk
      NOTIFY_GATEWAY_SERVICE_PORT: '80'
      PARTY_SERVICE_HOST: ras-party-teardown-migration.apps.devtest.onsclofo.uk
      PARTY_SERVICE_PORT: '80'
      RM_CASE_SERVICE_HOST: rm-case-service-teardown-migration.apps.devtest.onsclofo.uk
      RM_CASE_SERVICE_PORT: '80'
      RM_COLLECTION_EXERCISE_SERVICE_HOST: rm-collection-exercise-service-teardown-migration.apps.devtest.onsclofo.uk
      RM_COLLECTION_EXERCISE_SERVICE_PORT: '80'
      RM_IAC_SERVICE_HOST: iac-service-teardown-migration.apps.devtest.onsclofo.uk
      RM_IAC_SERVICE_PORT: '80'
      RM_SAMPLE_SERVICE_HOST: rm-sample-service-teardown-migration.apps.devtest.onsclofo.uk
      RM_SAMPLE_SERVICE_PORT: '80'
      RM_SURVEY_SERVICE_HOST: rm-survey-service-teardown-migration.apps.devtest.onsclofo.uk
      RM_SURVEY_SERVICE_PORT: '80'
      RAS_CASE_SERVICE_HOST: rm-case-service-teardown-migration.apps.devtest.onsclofo.uk
      RAS_CASE_SERVICE_PORT: '80'
      RAS_COLLEX_SERVICE_HOST: rm-collection-exercise-service-teardown-migration.apps.devtest.onsclofo.uk
      RAS_COLLEX_SERVICE_PORT: '80'
      RAS_FRONTSTAGE_API_HOST: ras-frontstage-api-teardown-migration.apps.devtest.onsclofo.uk
      RAS_FRONTSTAGE_API_PORT: '80'
      RAS_IAC_SERVICE_HOST: iac-service-teardown-migration.apps.devtest.onsclofo.uk
      RAS_IAC_SERVICE_PORT: '80'
      RAS_OAUTH_SERVICE_HOST: django-oauth2-test-teardown-migration.apps.devtest.onsclofo.uk
      RAS_OAUTH_SERVICE_PORT: '80'
      RAS_PARTY_SERVICE_HOST: ras-party-teardown-migration.apps.devtest.onsclofo.uk
      RAS_PARTY_SERVICE_PORT: '80'
      RAS_COLLECTION_INSTRUMENT_SERVICE_HOST: ras-collection-instrument-teardown-migration.apps.devtest.onsclofo.uk
      RAS_COLLECTION_INSTRUMENT_SERVICE_PORT: '80'
      RAS_PUBLIC_WEBSITE_HOST: ras-frontstage-teardown-migration.apps.devtest.onsclofo.uk
      RAS_PUBLIC_WEBSITE_PORT: '80'
      RAS_SECURE_MESSAGE_SERVICE_HOST: ras-secure-message-teardown-migration.apps.devtest.onsclofo.uk
      RAS_SECURE_MESSAGE_SERVICE_PORT: '80'
      RAS_SECURE_MESSAGING_SERVICE_HOST: ras-secure-message-teardown-migration.apps.devtest.onsclofo.uk
      RAS_SECURE_MESSAGING_SERVICE_PORT: '80'
      RAS_SURVEY_SERVICE_HOST: rm-survey-service-teardown-migration.apps.devtest.onsclofo.uk
      RAS_SURVEY_SERVICE_PORT: '80'
      RESPONSE_OPERATIONS_UI_HOST: response-operations-ui-teardown-migration.apps.devtest.onsclofo.uk
      RESPONSE_OPERATIONS_UI_PORT: '80'
      SAMPLE_SERVICE_HOST: rm-sample-service-teardown-migration.apps.devtest.onsclofo.uk
      SAMPLE_SERVICE_PORT: '80'
      SECURE_MESSAGE_SERVICE_HOST: ras-secure-message-teardown-migration.apps.devtest.onsclofo.uk
      SECURE_MESSAGE_SERVICE_PORT: '80'
      SURVEY_SERVICE_HOST: rm-survey-service-teardown-migration.apps.devtest.onsclofo.uk
      SURVEY_SERVICE_PORT: '80'

    create_rm_redis: &teardown_create_rm_redis
      put: create-rm-redis
      resource: cf-cli-resource-teardown
      params:
        command: create-service
        service: elasticache-broker
        plan: small
        service_instance: rm-redis
        timeout: 600
        wait_for_service: true

    create_rm_rabbitmq: &teardown_create_rm_rabbitmq
      put: create-rm-rabbitmq
      resource: cf-cli-resource-teardown
      params:
        command: create-service
        service: rabbitmq
        plan: standard
        service_instance: rm-rabbitmq
        timeout: 300
        wait_for_service: true

    create_rm_pg_db: &teardown_create_rm_pg_db
      put: create-database
      resource: cf-cli-resource-teardown
      params:
        command: create-service
        service: rds
        plan: shared-psql
        service_instance: rm-pg-db
        timeout: 300
        wait_for_service: true

resource_types:
- name: cf-cli-resource
  type: docker-image
  source:
    repository: nulldriver/cf-cli-resource
    tag: latest

### START MICROSERVICE REPOS
resources:
- name: ras-deploy
  type: git
  source:
    uri: https://github.com/ONSdigital/ras-deploy.git
    branch: master

- name: ras-party-source
  type: git
  source:
    uri: https://github.com/ONSdigital/ras-party.git
    branch: master

- name: ras-secure-message-source
  type: git
  source:
    uri: https://github.com/ONSdigital/ras-secure-message.git
    branch: master

- name: ras-backstage-source
  type: git
  source:
    uri: https://github.com/ONSdigital/ras-backstage.git
    branch: master

- name: ras-collection-instrument-source
  type: git
  source:
    uri: https://github.com/ONSdigital/ras-collection-instrument.git
    branch: master

- name: ras-frontstage-source
  type: git
  source:
    uri: https://github.com/ONSdigital/ras-frontstage.git
    branch: master

- name: ras-frontstage-api-source
  type: git
  source:
    uri: https://github.com/ONSdigital/ras-frontstage-api.git
    branch: master

- name: django-oauth2-test-source
  type: git
  source:
    uri: https://github.com/ONSdigital/django-oauth2-test.git
    branch: exit-shell-script-on-error

- name: response-operations-ui-source
  type: git
  source:
    uri: https://github.com/ONSdigital/response-operations-ui.git

- name: rm-action-service-source
  type: git
  source:
    uri: https://github.com/ONSdigital/rm-action-service.git
    branch: consistent-artifact-name

- name: rm-actionexporter-service-source
  type: git
  source:
    uri: https://github.com/ONSdigital/rm-actionexporter-service.git
    branch: consistent-artifact-name

- name: rm-case-service-source
  type: git
  source:
    uri: https://github.com/ONSdigital/rm-case-service.git
    branch: consistent-artifact-name

- name: rm-collection-exercise-service-source
  type: git
  source:
    uri: https://github.com/ONSdigital/rm-collection-exercise-service.git
    branch: consistent-artifact-name

- name: iac-service-source
  type: git
  source:
    uri: git@github.com:ONSdigital/iac-service.git
    branch: consistent-artifact-name
    private_key: ((git_key))

- name: rm-notify-gateway-source
  type: git
  source:
    uri: https://github.com/ONSdigital/rm-notify-gateway.git
    branch: consistent-artifact-name

- name: rm-sample-service-source
  type: git
  source:
    uri: https://github.com/ONSdigital/rm-sample-service.git
    branch: consistent-artifact-name

- name: rm-sdx-gateway-source
  type: git
  source:
    uri: https://github.com/ONSdigital/rm-sdx-gateway.git
    branch: consistent-artifact-name

- name: rm-survey-service-source
  type: git
  source:
    uri: https://github.com/ONSdigital/rm-survey-service.git

- name: sdc-uaa-source
  type: git
  source:
    uri: https://github.com/ONSdigital/sdc-uaa.git
### END MICROSERVICE REPOS

- name: rasrm-acceptance-tests-source
  type: git
  source:
    uri: https://github.com/ONSdigital/rasrm-acceptance-tests.git
    branch: fixing-tests-for-concourse

- name: cf-cli-resource-teardown
  type: cf-cli-resource
  source: &teardown_cf_cli_auth
    api: ((cloudfoundry_api))
    username: ((cloudfoundry_email))
    password: ((cloudfoundry_password))
    org: rmras
    space: concourse-teardown
    skip_cert_check: true

- name: cf-resource-teardown
  type: cf
  source:
    api: ((cloudfoundry_api))
    username: ((cloudfoundry_email))
    password: ((cloudfoundry_password))
    organization: rmras
    space: concourse-teardown
    skip_cert_check: true

- name: teardown-timer
  type: time
  source:
    interval: 1h

jobs:
- name: tear-down
  serial_groups: [ras-party-teardown-deploy, ras-backstage-teardown-deploy, ras-frontstage-teardown-deploy, ras-frontstage-api-teardown-deploy,
    django-oauth2-test-teardown-deploy, response-operations-ui-teardown-deploy, ras-secure-message-teardown-deploy,
    ras-collection-instrument-teardown-deploy, rm-action-service-teardown-deploy, rm-actionexporter-service-teardown-deploy,
    rm-case-service-teardown-deploy, rm-collection-exercise-teardown-deploy, iac-service-teardown-deploy, rm-notify-gateway-teardown-deploy,
    rm-sample-service-teardown-deploy, rm-sdx-gateway-teardown-deploy, rm-survey-service-teardown-deploy, sdc-uaa-teardown-deploy]
  plan:
  - get: ras-deploy
  - get: teardown-timer
    trigger: true
  - task: clear-space
    file: ras-deploy/tasks/clear_space.yml
    params:
      CLOUDFOUNDRY_API: ((cloudfoundry_api))
      CLOUDFOUNDRY_EMAIL: ((cloudfoundry_email))
      CLOUDFOUNDRY_PASSWORD: ((cloudfoundry_password))
      CLOUDFOUNDRY_ORG: rmras
      CLOUDFOUNDRY_SPACE: concourse-teardown

### START DEPLOYMENTS
- name: ras-party-teardown-deploy
  serial_groups: [ras-party-teardown-deploy]
  plan:
  - get: ras-party-source
  - get: teardown-timer
    trigger: true
    passed: [tear-down]
  - put: create-database
    resource: cf-cli-resource-teardown
    params:
      command: create-service
      service: rds
      plan: shared-psql
      service_instance: ras-party-db
      timeout: 300
      wait_for_service: true
  - put: push-app
    resource: cf-resource-teardown
    params:
      current_app_name: ras-party-teardown-migration
      manifest: ras-party-source/manifest.yml
      path: ras-party-source
      environment_variables:
        <<: *teardown_security_user
        <<: *teardown_service_endpoints_for_python
        RAS_NOTIFY_CONFIRM_PASSWORD_CHANGE_TEMPLATE: ba41c152-ad96-4255-9456-9e42de83f510
        RAS_NOTIFY_EMAIL_VERIFICATION_TEMPLATE: 53c59576-8c3b-4298-99d1-b245ddd28500
        RAS_NOTIFY_REQUEST_PASSWORD_CHANGE_TEMPLATE: c45c59ff-7771-4de4-a66b-ce50b108390a
        RAS_NOTIFY_SERVICE_URL: http://rm-notify-gateway-teardown-migration.apps.devtest.onsclofo.uk/emails/

- name: ras-secure-message-teardown-deploy
  serial_groups: [ras-secure-message-teardown-deploy]
  plan:
  - get: ras-secure-message-source
  - get: teardown-timer
    trigger: true
    passed: [tear-down]
  - put: create-database
    resource: cf-cli-resource-teardown
    params:
      command: create-service
      service: rds
      plan: shared-psql
      service_instance: secure-message-db
      timeout: 300
      wait_for_service: true
  - put: cf-resource-teardown
    params:
      current_app_name: ras-secure-message-teardown-migration
      manifest: ras-secure-message-source/manifest.yml
      path: ras-secure-message-source
      environment_variables:
        <<: *teardown_security_user
        <<: *teardown_service_endpoints_for_python
        JWT_ALGORITHM: 'HS256'
        JWT_SECRET: ((teardown_jwt_secret))
        NOTIFICATION_API_KEY: ((test_notify_api_key))
        NOTIFICATION_TEMPLATE_ID: 'f6404844-a994-428c-a5d7-45a4e1cfff4b'
        NOTIFY_VIA_GOV_NOTIFY: '1'
        RM_NOTIFY_GATEWAY_URL: 'http://rm-notify-gateway-teardown-migration.apps.devtest.onsclofo.uk/emails/'
        RAS_SM_PATH: '/home/vcap/app'
        SERVICE_ID: 'ce3674b1-7b08-4377-a6a7-05b5722d4ea5'
        UAA_URL: 'http://uaa-concourse-teardown.apps.devtest.onsclofo.uk'
        CLIENT_ID: 'secure_message'
        CLIENT_SECRET: ((teardown_secure_message_client_secret))
        USE_UAA: '1'

- name: ras-backstage-teardown-deploy
  serial_groups: [ras-backstage-teardown-deploy]
  plan:
  - get: ras-backstage-source
  - get: teardown-timer
    trigger: true
    passed: [tear-down]
  - put: cf-resource-teardown
    params:
      current_app_name: ras-backstage-teardown-migration
      manifest: ras-backstage-source/manifest.yml
      path: ras-backstage-source
      environment_variables:
        <<: *teardown_security_user
        <<: *teardown_service_endpoints_for_python
        RAS_SECURE_MESSAGING_JWT_SECRET: ((teardown_jwt_secret))
        UAA_CLIENT_ID: 'ras_backstage'
        UAA_CLIENT_SECRET: ((teardown_backstage_client_secret))
        UAA_SERVICE_URL: 'http://uaa-concourse-teardown.apps.devtest.onsclofo.uk'
        USE_UAA: '1'

- name: ras-collection-instrument-teardown-deploy
  serial_groups: [ras-collection-instrument-teardown-deploy]
  plan:
  - get: ras-collection-instrument-source
  - get: teardown-timer
    trigger: true
    passed: [tear-down]
  - put: create-database
    resource: cf-cli-resource-teardown
    params:
      command: create-service
      service: rds
      plan: shared-psql
      service_instance: ras-teardown-db
      timeout: 300
      wait_for_service: true
  - put: cf-resource-teardown
    params:
      current_app_name: ras-collection-instrument-teardown-migration
      manifest: ras-collection-instrument-source/manifest.yml
      path: ras-collection-instrument-source
      environment_variables:
        <<: *teardown_security_user
        <<: *teardown_service_endpoints_for_python
        JSON_SECRET_KEYS: ((teardown_json_secret_keys))
        ONS_CRYPTOKEY: ((teardown_collection_instrument_encryption_key))
        RABBITMQ_AMQP_COLLECTION_INSTRUMENT: ((teardown_rabbitmq_amqp_collection_instrument)) # What is this queue?
        RABBITMQ_AMQP_SURVEY_RESPONSE: ((teardown_rabbitmq_amqp_survey_response))

- name: ras-frontstage-teardown-deploy
  serial_groups: [ras-frontstage-teardown-deploy]
  plan:
  - get: ras-frontstage-source
  - get: teardown-timer
    trigger: true
    passed: [tear-down]
  - <<: *teardown_create_rm_redis
  - put: cf-resource-teardown
    params:
      current_app_name: ras-frontstage-teardown-migration
      manifest: ras-frontstage-source/manifest.yml
      path: ras-frontstage-source
      environment_variables:
        <<: *teardown_security_user
        <<: *teardown_service_endpoints_for_python
        JWT_SECRET: ((teardown_jwt_secret))
        SECRET_KEY: ((teardown_enrolement_code_encryption_key))

- name: ras-frontstage-api-teardown-deploy
  serial_groups: [ras-frontstage-api-teardown-deploy]
  plan:
  - get: ras-frontstage-api-source
  - get: teardown-timer
    trigger: true
    passed: [tear-down]
  - put: cf-resource-teardown
    params:
      current_app_name: ras-frontstage-api-teardown-migration
      manifest: ras-frontstage-api-source/manifest.yml
      path: ras-frontstage-api-source
      environment_variables:
        <<: *teardown_security_user
        <<: *teardown_service_endpoints_for_python
        DJANGO_CLIENT_ID: 'ons@ons.gov'
        DJANGO_CLIENT_SECRET: 'password'
        EQ_URL: 'https://eq-test/session?token='
        JSON_SECRET_KEYS: ((teardown_json_secret_keys))

- name: django-oauth2-test-teardown-deploy
  serial_groups: [django-oauth2-test-teardown-deploy]
  plan:
  - get: django-oauth2-test-source
  - get: teardown-timer
    trigger: true
    passed: [tear-down]
  - put: create-database
    resource: cf-cli-resource-teardown
    params:
      command: create-service
      service: rds
      plan: shared-psql
      service_instance: oauth-db
      timeout: 300
      wait_for_service: true
  # Create git_info file for info end point
  - task: git-info
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: paasmule/curl-ssl-git
          tag: "latest"
      inputs:
        - name: django-oauth2-test-source
      outputs:
        - name: django-oauth2-test-source-git-info
      run:
        path: sh
        args:
        - -exc
        - |
          cd django-oauth2-test-source
          branch=$(git rev-parse --abbrev-ref HEAD)
          url=$(git config --get remote.origin.url)
          commit=$(git rev-parse HEAD)
          repo=$(basename `git rev-parse --show-toplevel`)
          when=`date --utc +%FT%TZ`
          output=git_info
          echo '{' > ${output}
          echo   \"origin\": \"${url}\", >> ${output}
          echo   \"commit\": \"${commit}\", >> ${output}
          echo   \"branch\": \"${branch}\", >> ${output}
          echo   \"name\": \"${repo}\", >> ${output}
          echo   \"built\": \"${when}\" >> ${output}
          echo '}' >> ${output}
          cd ..
          cp -r django-oauth2-test-source/* django-oauth2-test-source-git-info
  - put: cf-resource-teardown
    params:
      current_app_name: django-oauth2-test-teardown-migration
      manifest: django-oauth2-test-source-git-info/manifest.yml
      path: django-oauth2-test-source-git-info
      environment_variables:
        <<: *teardown_security_user
        CSRF_ENABLED: 'True'
        DEBUG: 'False'
        DJANGO_SETTINGS_MODULE: 'proj.settings.cloud_foundry_settings'
        OAUTH2_SUPER_USER: ((teardown_oauth2_super_user))
        OAUTH2_SUPER_USER_EMAIL: ((teardown_oauth2_super_user_email))
        OAUTH2_SUPER_USER_PASSWORD: ((teardown_oauth2_super_user_password))
        SECRET_KEY: ((teardown_jwt_secret))
        TESTING: 'False'

- name: response-operations-ui-teardown-deploy
  serial_groups: [response-operations-ui-teardown-deploy]
  plan:
  - get: response-operations-ui-source
  - get: teardown-timer
    trigger: true
    passed: [tear-down]
  - put: create-redis
    resource: cf-cli-resource-teardown
    params:
      command: create-service
      service: elasticache-broker
      plan: small
      service_instance: ras-redis
      timeout: 600
      wait_for_service: true
  - put: cf-resource-teardown
    params:
      current_app_name: response-operations-ui-teardown-migration
      manifest: response-operations-ui-source/manifest.yml
      path: response-operations-ui-source
      environment_variables:
        BACKSTAGE_API_URL: 'http://ras-backstage-teardown-migration.apps.devtest.onsclofo.uk/backstage-api'
        UAA_SERVICE_URL: 'http://uaa-concourse-teardown.apps.devtest.onsclofo.uk'
        SECURE_MESSAGE_URL: 'http://ras-secure-message-teardown-migration.apps.devtest.onsclofo.uk'
        RAS_SECURE_MESSAGING_JWT_SECRET: ((teardown_jwt_secret))
        REDIS_SERVICE: ras-redis

- name: rm-action-service-teardown-deploy
  serial_groups: [rm-action-service-teardown-deploy]
  plan:
  - get: rm-action-service-source
  - get: teardown-timer
    trigger: true
    passed: [tear-down]
  - <<: *teardown_create_rm_pg_db
  - <<: *teardown_create_rm_redis
  - <<: *teardown_create_rm_rabbitmq
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: maven
          tag: 3.3.9-jdk-8
      inputs:
        - name: rm-action-service-source
      outputs:
        - name: target
          path: target
      run:
        path: sh
        args:
        - -exc
        - |
          mvn --settings rm-action-service-source/.maven.settings.xml install -Ddockerfile.skip -f rm-action-service-source/pom.xml
          cp -r rm-action-service-source/target/ .
  - put: cf-resource-teardown
    params:
      current_app_name: rm-action-service-teardown-migration
      manifest: rm-action-service-source/manifest-no-envs.yml
      path: target/actionsvc.jar
      environment_variables:
        partySvc_connectionConfig_host: 'ras-party-teardown-migration.apps.devtest.onsclofo.uk'
        partySvc_connectionConfig_port: '80'
        partySvc_connectionConfig_scheme: 'http'
        partySvc_connectionConfig_username: ((teardown_security_user_name))
        partySvc_connectionConfig_password: ((teardown_security_user_password))
        collectionExerciseSvc_connectionConfig_host: 'rm-collection-exercise-service-teardown-migration.apps.devtest.onsclofo.uk'
        collectionExerciseSvc_connectionConfig_port: '80'
        collectionExerciseSvc_connectionConfig_scheme: 'http'
        collectionExerciseSvc_connectionConfig_username: ((teardown_security_user_name))
        collectionExerciseSvc_connectionConfig_password: ((teardown_security_user_password))
        caseSvc_connectionConfig_host: 'rm-case-service-teardown-migration.apps.devtest.onsclofo.uk'
        caseSvc_connectionConfig_port: '80'
        caseSvc_connectionConfig_scheme: 'http'
        caseSvc_connectionConfig_username: ((teardown_security_user_name))
        caseSvc_connectionConfig_password: ((teardown_security_user_password))
        surveySvc_connectionConfig_host: 'rm-survey-service-teardown-migration.apps.devtest.onsclofo.uk'
        surveySvc_connectionConfig_port: '80'
        surveySvc_connectionConfig_scheme: 'http'
        surveySvc_connectionConfig_username: ((teardown_security_user_name))
        surveySvc_connectionConfig_password: ((teardown_security_user_password))
        endpoints_enabled: 'false'
        security_user_name: ((teardown_security_user_name))
        security_user_password: ((teardown_security_user_password))

- name: rm-actionexporter-service-teardown-deploy
  serial_groups: [rm-actionexporter-service-teardown-deploy]
  plan:
  - get: rm-actionexporter-service-source
  - get: teardown-timer
    trigger: true
    passed: [tear-down]
  - <<: *teardown_create_rm_pg_db
  - <<: *teardown_create_rm_redis
  - <<: *teardown_create_rm_rabbitmq
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: maven
          tag: 3.3.9-jdk-8
      inputs:
        - name: rm-actionexporter-service-source
      outputs:
        - name: target
          path: target
      run:
        path: sh
        args:
        - -exc
        - |
          mvn --settings rm-actionexporter-service-source/.maven.settings.xml install -Ddockerfile.skip -f rm-actionexporter-service-source/pom.xml
          cp -r rm-actionexporter-service-source/target/ .
  - put: cf-resource-teardown
    params:
      current_app_name: rm-actionexporter-service-teardown-migration
      manifest: rm-actionexporter-service-source/manifest.yml
      path: target/actionexportersvc.jar
      environment_variables:
        endpoints_enabled: 'false'
        exportSchedule_cronExpression: '0 * * * * ?'
        security_user_name: ((teardown_security_user_name))
        security_user_password: ((teardown_security_user_password))
        sftp_host: ((sftp_host))
        sftp_password: ((actionexporter_sftp_password))
        sftp_port: '22'
        sftp_username: ((actionexporter_sftp_username))

- name: rm-case-service-teardown-deploy
  serial_groups: [rm-case-service-teardown-deploy]
  plan:
  - get: rm-case-service-source
  - get: teardown-timer
    trigger: true
    passed: [tear-down]
  - <<: *teardown_create_rm_pg_db
  - <<: *teardown_create_rm_redis
  - <<: *teardown_create_rm_rabbitmq
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: maven
          tag: 3.3.9-jdk-8
      inputs:
        - name: rm-case-service-source
      outputs:
        - name: target
          path: target
      run:
        path: sh
        args:
        - -exc
        - |
          mvn --settings rm-case-service-source/.travis.settings.xml install -Ddockerfile.skip -f rm-case-service-source/pom.xml
          cp -r rm-case-service-source/target/ .
  - put: cf-resource-teardown
    params:
      current_app_name: rm-case-service-teardown-migration
      manifest: rm-case-service-source/manifest-no-envs.yml
      path: target/casesvc.jar
      environment_variables:
        actionSvc_connectionConfig_host: 'rm-action-service-teardown-migration.apps.devtest.onsclofo.uk'
        actionSvc_connectionConfig_password: ((teardown_security_user_password))
        actionSvc_connectionConfig_port: '80'
        actionSvc_connectionConfig_scheme: 'http'
        actionSvc_connectionConfig_username: ((teardown_security_user_name))
        collectionExerciseSvc_connectionConfig_host: 'rm-collection-exercise-service-teardown-migration.apps.devtest.onsclofo.uk'
        collectionExerciseSvc_connectionConfig_password: ((teardown_security_user_password))
        collectionExerciseSvc_connectionConfig_port: '80'
        collectionExerciseSvc_connectionConfig_scheme: 'http'
        collectionExerciseSvc_connectionConfig_username: ((teardown_security_user_name))
        endpoints_enabled: 'false'
        internetAccessCodeSvc_connectionConfig_host: 'iac-service-teardown-migration.apps.devtest.onsclofo.uk'
        internetAccessCodeSvc_connectionConfig_password: ((teardown_security_user_password))
        internetAccessCodeSvc_connectionConfig_port: '80'
        internetAccessCodeSvc_connectionConfig_scheme: 'http'
        internetAccessCodeSvc_connectionConfig_username: ((teardown_security_user_name))
        security_user_name: ((teardown_security_user_name))
        security_user_password: ((teardown_security_user_password))

- name: rm-collection-exercise-teardown-deploy
  serial_groups: [rm-collection-exercise-teardown-deploy]
  plan:
  - get: rm-collection-exercise-service-source
  - get: teardown-timer
    trigger: true
    passed: [tear-down]
  - <<: *teardown_create_rm_pg_db
  - <<: *teardown_create_rm_redis
  - <<: *teardown_create_rm_rabbitmq
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: maven
          tag: 3.3.9-jdk-8
      inputs:
        - name: rm-collection-exercise-service-source
      outputs:
        - name: target
          path: target
      run:
        path: sh
        args:
        - -exc
        - |
          mvn --settings rm-collection-exercise-service-source/.maven.settings.xml install -Ddockerfile.skip -f rm-collection-exercise-service-source/pom.xml
          cp -r rm-collection-exercise-service-source/target/ .
  - put: cf-resource-teardown
    params:
      current_app_name: rm-collection-exercise-service-teardown-migration
      manifest: rm-collection-exercise-service-source/manifest-no-envs.yml
      path: target/collectionexercisesvc.jar
      environment_variables:
        collectionInstrumentSvc_connectionConfig_host: 'ras-collection-instrument-teardown-migration.apps.devtest.onsclofo.uk'
        collectionInstrumentSvc_connectionConfig_password: ((teardown_security_user_password))
        collectionInstrumentSvc_connectionConfig_port: '80'
        collectionInstrumentSvc_connectionConfig_scheme: 'http'
        collectionInstrumentSvc_connectionConfig_username: ((teardown_security_user_name))
        endpoints_enabled: 'false'
        partySvc_connectionConfig_host: 'ras-party-teardown-migration.apps.devtest.onsclofo.uk'
        partySvc_connectionConfig_password: ((teardown_security_user_password))
        partySvc_connectionConfig_port: '80'
        partySvc_connectionConfig_scheme: 'http'
        partySvc_connectionConfig_username: ((teardown_security_user_name))
        sampleSvc_connectionConfig_host: 'rm-sample-service-teardown-migration.apps.devtest.onsclofo.uk'
        sampleSvc_connectionConfig_password: ((teardown_security_user_password))
        sampleSvc_connectionConfig_port: '80'
        sampleSvc_connectionConfig_scheme: 'http'
        sampleSvc_connectionConfig_username: ((teardown_security_user_name))
        security_user_name: ((teardown_security_user_name))
        security_user_password: ((teardown_security_user_password))
        surveySvc_connectionConfig_host: 'rm-survey-service-teardown-migration.apps.devtest.onsclofo.uk'
        surveySvc_connectionConfig_password: ((teardown_security_user_password))
        surveySvc_connectionConfig_port: '80'
        surveySvc_connectionConfig_scheme: 'http'
        surveySvc_connectionConfig_username: ((teardown_security_user_name))
        SCHEDULES_VALIDATION_SCHEDULE_DELAY_MILLI_SECONDS: '1000'
        SCHEDULES_DISTRIBUTION_SCHEDULE_DELAY_MILLI_SECONDS: '1000'

- name: iac-service-teardown-deploy
  serial_groups: [iac-service-teardown-deploy]
  plan:
  - get: iac-service-source
  - get: teardown-timer
    trigger: true
    passed: [tear-down]
  - <<: *teardown_create_rm_pg_db
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: maven
          tag: 3.3.9-jdk-8
      inputs:
        - name: iac-service-source
      outputs:
        - name: target
          path: target
      run:
        path: sh
        args:
        - -exc
        - |
          mvn --settings iac-service-source/.travis.settings.xml install -Ddockerfile.skip -f iac-service-source/pom.xml
          cp -r iac-service-source/target/ .
  - put: cf-resource-teardown
    params:
      current_app_name: iac-service-teardown-migration
      manifest: iac-service-source/manifest-no-envs.yml
      path: target/iacsvc.jar
      environment_variables:
        caseSvc_connectionConfig_host: 'rm-case-service-teardown-migration.apps.devtest.onsclofo.uk'
        caseSvc_connectionConfig_password: ((teardown_security_user_password))
        caseSvc_connectionConfig_port: '80'
        caseSvc_connectionConfig_scheme: 'http'
        caseSvc_connectionConfig_username: ((teardown_security_user_name))
        endpoints_enabled: 'false'
        security_user_name: ((teardown_security_user_name))
        security_user_password: ((teardown_security_user_password))

- name: rm-notify-gateway-teardown-deploy
  serial_groups: [rm-notify-gateway-teardown-deploy]
  plan:
  - get: rm-notify-gateway-source
  - get: teardown-timer
    trigger: true
    passed: [tear-down]
  - <<: *teardown_create_rm_pg_db
  - <<: *teardown_create_rm_rabbitmq
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: maven
          tag: 3.3.9-jdk-8
      inputs:
        - name: rm-notify-gateway-source
      outputs:
        - name: target
          path: target
      run:
        path: sh
        args:
        - -exc
        - |
          mvn --settings rm-notify-gateway-source/.travis.settings.xml install -Ddockerfile.skip -f rm-notify-gateway-source/pom.xml
          cp -r rm-notify-gateway-source/target/ .
  - put: cf-resource-teardown
    params:
      current_app_name: rm-notify-gateway-teardown-migration
      manifest: rm-notify-gateway-source/manifest.yml
      path: target/notifygatewaysvc.jar
      environment_variables:
        endpoints_enabled: 'false'
        notify_apiKey: ((test_notify_api_key))
        notify_censusUacSmsTemplateId: '966731dc-ef2e-41ad-a828-8cdd95c81ebc'
        notify_enabled: 'false'
        notify_onsSurveysRasEmailReminderTemplateId: '19a0aa89-797f-4a34-ad54-267fd581f2ef'
        security_user_name: ((teardown_security_user_name))
        security_user_password: ((teardown_security_user_password))

- name: rm-sample-service-teardown-deploy
  serial_groups: [rm-sample-service-teardown-deploy]
  plan:
  - get: rm-sample-service-source
  - get: teardown-timer
    trigger: true
    passed: [tear-down]
  - <<: *teardown_create_rm_pg_db
  - <<: *teardown_create_rm_redis
  - <<: *teardown_create_rm_rabbitmq
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: maven
          tag: 3.3.9-jdk-8
      inputs:
        - name: rm-sample-service-source
      outputs:
        - name: target
          path: target
      run:
        path: sh
        args:
        - -exc
        - |
          mvn --settings rm-sample-service-source/.travis.settings.xml install -Ddockerfile.skip -Ddocker.skip -DskipITs -f rm-sample-service-source/pom.xml
          cp -r rm-sample-service-source/target/ .
  - put: cf-resource-teardown
    params:
      current_app_name: rm-sample-service-teardown-migration
      manifest: rm-sample-service-source/manifest-no-envs.yml
      path: target/samplesvc.jar
      environment_variables:
        endpoints_enabled: 'false'
        exportSchedule_cronExpression: '0 0/5 * * * ?'
        partySvc_connectionConfig_host: 'ras-party-teardown-migration.apps.devtest.onsclofo.uk'
        partySvc_connectionConfig_password: ((teardown_security_user_password))
        partySvc_connectionConfig_port: '80'
        partySvc_connectionConfig_scheme: 'http'
        partySvc_connectionConfig_username: ((teardown_security_user_name))
        security_user_name: ((teardown_security_user_name))
        security_user_password: ((teardown_security_user_password))
        sftp_host: ((sftp_host))
        sftp_password: ((sample_sftp_password))
        sftp_port: '22'
        sftp_username: ((sample_sftp_username))

- name: rm-sdx-gateway-teardown-deploy
  serial_groups: [rm-sdx-gateway-teardown-deploy]
  plan:
  - get: rm-sdx-gateway-source
  - get: teardown-timer
    trigger: true
    passed: [tear-down]
  - <<: *teardown_create_rm_redis
  - <<: *teardown_create_rm_rabbitmq
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: maven
          tag: 3.3.9-jdk-8
      inputs:
        - name: rm-sdx-gateway-source
      outputs:
        - name: target
          path: target
      run:
        path: sh
        args:
        - -exc
        - |
          mvn --settings rm-sdx-gateway-source/.travis.settings.xml install -Ddockerfile.skip -f rm-sdx-gateway-source/pom.xml
          cp -r rm-sdx-gateway-source/target/ .
  - put: cf-resource-teardown
    params:
      current_app_name: rm-sdx-gateway-teardown-migration
      manifest: rm-sdx-gateway-source/manifest.yml
      path: target/sdxgatewaysvc.jar
      environment_variables:
        endpoints_enabled: 'false'
        security_user_name: ((teardown_security_user_name))
        security_user_password: ((teardown_security_user_password))

- name: rm-survey-service-teardown-deploy
  serial_groups: [rm-survey-service-teardown-deploy]
  plan:
  - get: rm-survey-service-source
  - get: teardown-timer
    trigger: true
    passed: [tear-down]
  - <<: *teardown_create_rm_pg_db
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: golang
      inputs:
        - name: rm-survey-service-source
      outputs:
        - name: rm-survey-service-build
          path: rm-survey-service
      run:
        path: sh
        args:
        - -exc
        - |
          mkdir -p /go/src/github.com/ONSdigital/
          cp -r rm-survey-service-source /go/src/github.com/ONSdigital/rm-survey-service
          make -C /go/src/github.com/ONSdigital/rm-survey-service
          cp -r /go/src/github.com/ONSdigital/rm-survey-service/ .
  - put: cf-resource-teardown
    params:
      current_app_name: rm-survey-service-teardown-migration
      manifest: rm-survey-service-source/manifest.yml
      path: rm-survey-service-build
      environment_variables:
        security_user_name: ((teardown_security_user_name))
        security_user_password: ((teardown_security_user_password))

- name: sdc-uaa-teardown-deploy
  serial_groups: [sdc-uaa-teardown-deploy]
  plan:
  - get: sdc-uaa-source
  - get: teardown-timer
    trigger: true
    passed: [tear-down]
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: sdcplatform/maven-cf-cli-docker
      inputs:
        - name: sdc-uaa-source
      outputs:
        - name: sdc-uaa-build
          path: sdc-uaa-build
      params:
        UAA_PRIVATE_KEY: ((teardown_uaa_private_key))
        UAA_CERTIFICATE: ((teardown_uaa_certificate))
        UAA_PRIVATE_KEY_PASSWORD: ((teardown_uaa_private_key_password))
        JENKINS_CF_USERNAME: ((cloudfoundry_email))
        JENKINS_CF_PASSWORD: ((cloudfoundry_password))
        API_ENDPOINT: ((cloudfoundry_api))
        ORG: rmras
        SPACE: concourse-teardown
        UAA_ID: ((teardown_uaa_id))
        UAA_SECRET: ((teardown_uaa_secret))
        UAA_JWT_SIGNING_KEY: ((teardown_uaa_jwt_signing_key))
        UAA_JWT_VERIFICATION_KEY: ((teardown_uaa_jwt_verification_key))
        UAA_URL: 'http://uaa-concourse-teardown.apps.devtest.onsclofo.uk'
        LOGIN_URL: 'http://uaa-concourse-teardown.apps.devtest.onsclofo.uk'
        ZONE_URL: 'uaa-concourse-teardown.apps.devtest.onsclofo.uk'
        ADMIN_SECRET: ((teardown_uaa_admin_secret))
        LOGIN_SECRET: ((teardown_uaa_login_secret))
      run:
        path: sh
        args:
        - -exc
        - |
          (cd sdc-uaa-source && ls && sh deploy-uaa-pre-steps.sh dev)
          mvn install -f sdc-uaa-source/pom.xml
          cp -r sdc-uaa-source/* sdc-uaa-build
  - put: cf-resource-teardown
    params:
      current_app_name: sdc-uaa-teardown-migration
      manifest: sdc-uaa-build/uaa-cf-application.yml
      #### EXTRACT ME ####
  - task: create-secure-message-client
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: kennethreitz/pipenv
      inputs:
        - name: sdc-uaa-source
      params:
        SPACE: concourse-teardown
        CLIENT: secure_message
        PASSWORD: ((teardown_secure_message_client_secret))
        ADMIN_SECRET: ((teardown_uaa_admin_secret))
        UAA_URL: 'uaa-concourse-teardown.apps.devtest.onsclofo.uk'
      run:
        dir: sdc-uaa-source
        path: sh
        args:
        - './scripts/jenkins/add_client.sh'
  - task: create-ras-backstage-client
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: kennethreitz/pipenv
      inputs:
        - name: sdc-uaa-source
      params:
        SPACE: concourse-teardown
        CLIENT: ras_backstage
        PASSWORD: ((teardown_backstage_client_secret))
        ADMIN_SECRET: ((teardown_uaa_admin_secret))
        UAA_URL: 'uaa-concourse-teardown.apps.devtest.onsclofo.uk'
      run:
        dir: sdc-uaa-source
        path: sh
        args:
        - './scripts/jenkins/add_client.sh'
  - task: create-uaa-user
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: kennethreitz/pipenv
      inputs:
        - name: sdc-uaa-source
      params:
        SPACE: concourse-teardown
        USERNAME: uaa_user
        PASSWORD: ((teardown_uaa_user_password))
        EMAIL: ons@ons.gov
        FIRSTNAME: uaa
        LASTNAME: user
        ADMIN_SECRET: ((teardown_uaa_admin_secret))
        UAA_URL: 'uaa-concourse-teardown.apps.devtest.onsclofo.uk'
      run:
        dir: sdc-uaa-source
        path: sh
        args:
        - './scripts/jenkins/add_user.sh'
### END DEPLOYMENTS

- name: rasrm-acceptance-tests
  serial_groups: [ras-party-teardown-deploy, ras-backstage-teardown-deploy, ras-frontstage-teardown-deploy, ras-frontstage-api-teardown-deploy,
    django-oauth2-test-teardown-deploy, response-operations-ui-teardown-deploy, ras-secure-message-teardown-deploy,
    ras-collection-instrument-teardown-deploy, rm-action-service-teardown-deploy, rm-actionexporter-service-teardown-deploy,
    rm-case-service-teardown-deploy, rm-collection-exercise-teardown-deploy, iac-service-teardown-deploy, rm-notify-gateway-teardown-deploy,
    rm-sample-service-teardown-deploy, rm-sdx-gateway-teardown-deploy, rm-survey-service-teardown-deploy, sdc-uaa-teardown-deploy]
  plan:
  - get: ras-deploy
  - get: teardown-timer
    trigger: true
    passed: [ras-party-teardown-deploy, ras-backstage-teardown-deploy, ras-frontstage-teardown-deploy, ras-frontstage-api-teardown-deploy,
    django-oauth2-test-teardown-deploy, response-operations-ui-teardown-deploy, ras-secure-message-teardown-deploy,
    ras-collection-instrument-teardown-deploy, rm-action-service-teardown-deploy, rm-actionexporter-service-teardown-deploy,
    rm-case-service-teardown-deploy, rm-collection-exercise-teardown-deploy, iac-service-teardown-deploy, rm-notify-gateway-teardown-deploy,
    rm-sample-service-teardown-deploy, rm-sdx-gateway-teardown-deploy, rm-survey-service-teardown-deploy, sdc-uaa-teardown-deploy]
  - get: rasrm-acceptance-tests-source
  - get: ras-party-source
    passed: [ras-party-teardown-deploy]
  - get: ras-backstage-source
    passed: [ras-backstage-teardown-deploy]
  - get: ras-frontstage-source
    passed: [ras-frontstage-teardown-deploy]
  - get: ras-frontstage-api-source
    passed: [ras-frontstage-api-teardown-deploy]
  - get: django-oauth2-test-source
    passed: [django-oauth2-test-teardown-deploy]
  - get: response-operations-ui-source
    passed: [response-operations-ui-teardown-deploy]
  - get: ras-secure-message-source
    passed: [ras-secure-message-teardown-deploy]
  - get: ras-collection-instrument-source
    passed: [ras-collection-instrument-teardown-deploy]
  - get: rm-action-service-source
    passed: [rm-action-service-teardown-deploy]
  - get: rm-actionexporter-service-source
    passed: [rm-actionexporter-service-teardown-deploy]
  - get: rm-case-service-source
    passed: [rm-case-service-teardown-deploy]
  - get: rm-collection-exercise-service-source
    passed: [rm-collection-exercise-teardown-deploy]
  - get: iac-service-source
    passed: [iac-service-teardown-deploy]
  - get: rm-notify-gateway-source
    passed: [rm-notify-gateway-teardown-deploy]
  - get: rm-sample-service-source
    passed: [rm-sample-service-teardown-deploy]
  - get: rm-sdx-gateway-source
    passed: [rm-sdx-gateway-teardown-deploy]
  - get: rm-survey-service-source
    passed: [rm-survey-service-teardown-deploy]
  - get: sdc-uaa-source
    passed: [sdc-uaa-teardown-deploy]
  - task: get-cf-database-uris
    file: ras-deploy/tasks/get_database_uris.yml
    params:
      CLOUDFOUNDRY_API: ((cloudfoundry_api))
      CLOUDFOUNDRY_EMAIL: ((cloudfoundry_email))
      CLOUDFOUNDRY_PASSWORD: ((cloudfoundry_password))
      CLOUDFOUNDRY_ORG: rmras
      CLOUDFOUNDRY_SPACE: concourse-teardown

  - task: acceptance-test
    privileged: true
    file: ras-deploy/tasks/rasrm-acceptance-tests/run_acceptance_tests.yml
    params:
      <<: *teardown_security_user
      <<: *teardown_service_endpoints_for_python