---
resource_types:
- name: cf-cli-resource
  type: docker-image
  source:
    repository: nulldriver/cf-cli-resource
    tag: latest

### START MICROSERVICE REPOS
resources:
- name: ras-party-source
  type: git
  source:
    uri: https://github.com/ONSdigital/ras-party.git
    branch: master

- name: ras-secure-message-source
  type: git
  source:
    uri: https://github.com/ONSdigital/ras-secure-message.git
    branch: master

- name: ras-backstage-source
  type: git
  source:
    uri: https://github.com/ONSdigital/ras-backstage.git
    branch: master

- name: ras-collection-instrument-source
  type: git
  source:
    uri: https://github.com/ONSdigital/ras-collection-instrument.git
    branch: master

- name: ras-frontstage-source
  type: git
  source:
    uri: https://github.com/ONSdigital/ras-frontstage.git
    branch: master

- name: ras-frontstage-api-source
  type: git
  source:
    uri: https://github.com/ONSdigital/ras-frontstage-api.git
    branch: master

- name: django-oauth2-test-source
  type: git
  source:
    uri: https://github.com/ONSdigital/django-oauth2-test.git

- name: response-operations-ui-source
  type: git
  source:
    uri: https://github.com/ONSdigital/response-operations-ui.git

- name: rm-action-service-source
  type: git
  source:
    uri: https://github.com/ONSdigital/rm-action-service.git
    branch: consistent-artifact-name

- name: rm-actionexporter-service-source
  type: git
  source:
    uri: https://github.com/ONSdigital/rm-actionexporter-service.git
    branch: consistent-artifact-name

- name: rm-case-service-source
  type: git
  source:
    uri: https://github.com/ONSdigital/rm-case-service.git
    branch: consistent-artifact-name

- name: rm-collection-exercise-service-source
  type: git
  source:
    uri: https://github.com/ONSdigital/rm-collection-exercise-service.git
    branch: consistent-artifact-name

#- name: iac-service-source
#  type: git
#  source:
#    uri: git@github.com:ONSdigital/iac-service.git
#    branch: consistent-artifact-name
#    private_key: ((git_key))
#
#- name: rm-notify-gateway-source
#  type: git
#  source:
#    uri: https://github.com/ONSdigital/rm-notify-gateway.git
#    branch: consistent-artifact-name
#
#- name: rm-sample-service-source
#  type: git
#  source:
#    uri: https://github.com/ONSdigital/rm-sample-service.git
#    branch: consistent-artifact-name
#
#- name: rm-sdx-gateway-source
#  type: git
#  source:
#    uri: https://github.com/ONSdigital/rm-sdx-gateway.git
#    branch: consistent-artifact-name
#
#- name: rm-survey-service-source
#  type: git
#  source:
#    uri: https://github.com/ONSdigital/rm-survey-service.git
#
#- name: sdc-uaa-source
#  type: git
#  source:
#    uri: https://github.com/ONSdigital/sdc-uaa.git
### END MICROSERVICE REPOS

- name: cf-cli-resource-ci
  type: cf-cli-resource
  source:
    api: {{cloudfoundry_api}}
    username: {{cloudfoundry_email}}
    password: {{cloudfoundry_password}}
    org: rmras
    space: concourse-ci
    skip_cert_check: true

- name: cf-resource-ci
  type: cf
  source:
    api: {{cloudfoundry_api}}
    username: {{cloudfoundry_email}}
    password: {{cloudfoundry_password}}
    organization: rmras
    space: concourse-ci
    skip_cert_check: true

jobs:
#- name: ras-party-unit-tests
#  plan:
#  - get: ras-party-source
#    trigger: true
#  - task: run-unit-tests
#    config:
#      platform: linux
#      image_resource:
#        type: docker-image
#        source:
#          repository: sdcplatform/python-pipenv-chrome
#      inputs:
#      - name: ras-party-source
#      params:
#        DATABASE_URI: sqlite://
#      run:
#        path: sh
#        dir: ras-party-source
#        args:
#        - -exc
#        - |
#          # Download quickfix for pipenv check error
#          pip install --upgrade --pre pipenv
#
#          echo $DATABASE_URI
#
#          pipenv install --dev
#          make test

- name: ras-party-ci-deploy
  plan:
  - get: ras-party-source
    trigger: true
  - put: create-database
    resource: cf-cli-resource-ci
    params:
      command: create-service
      service: rds
      plan: shared-psql
      service_instance: ras-party-db
      timeout: 300
      wait_for_service: true
  - put: push-app
    resource: cf-resource-ci
    params:
      current_app_name: ras-party-ci-migration
      manifest: ras-party-source/manifest.yml
      path: ras-party-source
      environment_variables:
        RAS_CASE_SERVICE_HOST: 'rm-case-service-ci-migration.apps.devtest.onsclofo.uk'
        RAS_CASE_SERVICE_PORT: '80'
        RAS_COLLEX_SERVICE_HOST: 'rm-collection-exercise-service-ci-migration.apps.devtest.onsclofo.uk'
        RAS_COLLEX_SERVICE_PORT: '80'
        RAS_IAC_SERVICE_HOST: 'iac-service-ci-migration.apps.devtest.onsclofo.uk'
        RAS_IAC_SERVICE_PORT: '80'
        RAS_NOTIFY_SERVICE_URL: 'http://rm-notify-gateway-ci-migration.apps.devtest.onsclofo.uk/emails/'
        RAS_OAUTH_SERVICE_HOST: 'django-oauth2-test-ci-migration.apps.devtest.onsclofo.uk'
        RAS_OAUTH_SERVICE_PORT: '80'
        RAS_PUBLIC_WEBSITE_HOST: 'ras-frontstage-ci-migration.apps.devtest.onsclofo.uk'
        RAS_PUBLIC_WEBSITE_PORT: '80'
        RAS_SURVEY_SERVICE_HOST: 'rm-survey-service-ci-migration.apps.devtest.onsclofo.uk'
        RAS_SURVEY_SERVICE_PORT: '80'
        RAS_NOTIFY_CONFIRM_PASSWORD_CHANGE_TEMPLATE: 'ba41c152-ad96-4255-9456-9e42de83f510'
        RAS_NOTIFY_EMAIL_VERIFICATION_TEMPLATE: '53c59576-8c3b-4298-99d1-b245ddd28500'
        RAS_NOTIFY_REQUEST_PASSWORD_CHANGE_TEMPLATE: 'c45c59ff-7771-4de4-a66b-ce50b108390a'
        SECURITY_USER_NAME: ((ci_security_user_name))
        SECURITY_USER_PASSWORD: ((ci_security_user_password))

- name: ras-secure-message-ci-deploy
  plan:
  - get: ras-secure-message-source
    trigger: true
  - put: create-database
    resource: cf-cli-resource-ci
    params:
      command: create-service
      service: rds
      plan: shared-psql
      service_instance: secure-message-db
      timeout: 300
      wait_for_service: true
  - put: cf-resource-ci
    params:
      current_app_name: ras-secure-message-ci-migration
      manifest: ras-secure-message-source/manifest.yml
      path: ras-secure-message-source
      environment_variables:
        JWT_ALGORITHM: 'HS256'
        JWT_SECRET: ((ci_jwt_secret))
        NOTIFICATION_API_KEY: ((test_notify_api_key))
        NOTIFICATION_TEMPLATE_ID: 'f6404844-a994-428c-a5d7-45a4e1cfff4b'
        NOTIFY_VIA_GOV_NOTIFY: '1'
        RM_NOTIFY_GATEWAY_URL: 'http://rm-notify-gateway-ci-migration.apps.devtest.onsclofo.uk/emails/'
        RAS_PARTY_SERVICE_HOST: 'ras-party-ci-migration.apps.devtest.onsclofo.uk'
        RAS_PARTY_SERVICE_PORT: '80'
        RM_CASE_SERVICE_HOST: 'rm-case-service-ci-migration.apps.devtest.onsclofo.uk'
        RM_CASE_SERVICE_PORT: '80'
        RAS_SM_PATH: '/home/vcap/app'
        SECURITY_USER_NAME: ((ci_security_user_name))
        SECURITY_USER_PASSWORD: ((ci_security_user_password))
        SERVICE_ID: 'ce3674b1-7b08-4377-a6a7-05b5722d4ea5'
        UAA_URL: 'http://uaa-ci-migration.apps.devtest.onsclofo.uk'
        CLIENT_ID: 'secure_message'
        CLIENT_SECRET: ((ci_secure_message_client_secret))
        USE_UAA: '1'

- name: ras-backstage-ci-deploy
  plan:
  - get: ras-backstage-source
    trigger: true
  - put: cf-resource-ci
    params:
      current_app_name: ras-backstage-ci-migration
      manifest: ras-backstage-source/manifest.yml
      path: ras-backstage-source
      environment_variables:
        RAS_SECURE_MESSAGING_JWT_SECRET: ((ci_jwt_secret))
        RAS_COLLECTION_INSTRUMENT_SERVICE_HOST: 'ras-collection-instrument-ci-migration.apps.devtest.onsclofo.uk'
        RAS_COLLECTION_INSTRUMENT_SERVICE_PORT: '80'
        RAS_OAUTH_SERVICE_HOST: 'django-oauth2-test-ci-migration.apps.devtest.onsclofo.uk'
        RAS_OAUTH_SERVICE_PORT: '80'
        RAS_PARTY_SERVICE_HOST: 'ras-party-ci-migration.apps.devtest.onsclofo.uk'
        RAS_PARTY_SERVICE_PORT: '80'
        RAS_SECURE_MESSAGING_SERVICE_HOST: 'ras-secure-message-ci-migration.apps.devtest.onsclofo.uk'
        RAS_SECURE_MESSAGING_SERVICE_PORT: '80'
        RM_CASE_SERVICE_HOST: 'rm-case-service-ci-migration.apps.devtest.onsclofo.uk'
        RM_CASE_SERVICE_PORT: '80'
        RM_COLLECTION_EXERCISE_SERVICE_HOST: 'rm-collection-exercise-service-ci-migration.apps.devtest.onsclofo.uk'
        RM_COLLECTION_EXERCISE_SERVICE_PORT: '80'
        RM_IAC_SERVICE_HOST: 'iac-service-ci-migration.apps.devtest.onsclofo.uk'
        RM_IAC_SERVICE_PORT: '80'
        RM_SAMPLE_SERVICE_HOST: 'rm-sample-service-ci-migration.apps.devtest.onsclofo.uk'
        RM_SAMPLE_SERVICE_PORT: '80'
        RM_SURVEY_SERVICE_HOST: 'rm-survey-service-ci-migration.apps.devtest.onsclofo.uk'
        RM_SURVEY_SERVICE_PORT: '80'
        SECURITY_USER_NAME: ((ci_security_user_name))
        SECURITY_USER_PASSWORD: ((ci_security_user_password))
        UAA_CLIENT_ID: 'ras_backstage'
        UAA_CLIENT_SECRET: ((ci_backstage_client_secret))
        UAA_SERVICE_URL: 'http://uaa-ci-migration.apps.devtest.onsclofo.uk'
        USE_UAA: '1'

- name: ras-collection-instrument-ci-deploy
  plan:
  - get: ras-collection-instrument-source
    trigger: true
  - put: create-database
    resource: cf-cli-resource-ci
    params:
      command: create-service
      service: rds
      plan: shared-psql
      service_instance: ras-ci-db
      timeout: 300
      wait_for_service: true
  - put: cf-resource-ci
    params:
      current_app_name: ras-collection-instrument-ci-migration
      manifest: ras-collection-instrument-source/manifest.yml
      path: ras-collection-instrument-source
      environment_variables:
        CASE_SERVICE_HOST: 'rm-case-service-ci-migration.apps.devtest.onsclofo.uk'
        CASE_SERVICE_PORT: '80'
        COLLECTION_EXERCISE_HOST: 'rm-collection-exercise-service-ci-migration.apps.devtest.onsclofo.uk'
        COLLECTION_EXERCISE_PORT: '80'
        PARTY_SERVICE_HOST: 'ras-party-ci-migration.apps.devtest.onsclofo.uk'
        PARTY_SERVICE_PORT: '80'
        JSON_SECRET_KEYS: ((ci_json_secret_keys))
        ONS_CRYPTOKEY: ((ci_collection_instrument_encryption_key))
        RABBITMQ_AMQP_COLLECTION_INSTRUMENT: ((ci_rabbitmq_amqp_collection_instrument)) # DANGEROUS!
        RABBITMQ_AMQP_SURVEY_RESPONSE: ((ci_rabbitmq_amqp_survey_response))
        RM_SURVEY_SERVICE_HOST: 'rm-survey-service-ci-migration.apps.devtest.onsclofo.uk'
        RM_SURVEY_SERVICE_PORT: '80'
        SECURITY_USER_NAME: ((ci_security_user_name))
        SECURITY_USER_PASSWORD: ((ci_security_user_password))

- name: ras-frontstage-ci-deploy
  plan:
  - get: ras-frontstage-source
    trigger: true
  - put: create-redis
    resource: cf-cli-resource-ci
    params:
      command: create-service
      service: elasticache-broker
      plan: small
      service_instance: rm-redis
      timeout: 600
      wait_for_service: true
  - put: cf-resource-ci
    params:
      current_app_name: ras-frontstage-ci-migration
      manifest: ras-frontstage-source/manifest.yml
      path: ras-frontstage-source
      environment_variables:
        JWT_SECRET: ((ci_jwt_secret))
        RAS_FRONTSTAGE_API_HOST: 'ras-frontstage-api-ci-migration.apps.devtest.onsclofo.uk'
        RAS_FRONTSTAGE_API_PORT: '80'
        RAS_SECURE_MESSAGE_SERVICE_HOST: 'ras-secure-message-ci-migration.apps.devtest.onsclofo.uk'
        RAS_SECURE_MESSAGE_SERVICE_PORT: '80'
        SECRET_KEY: ((ci_enrolement_code_encryption_key))
        SECURITY_USER_NAME: ((ci_security_user_name))
        SECURITY_USER_PASSWORD: ((ci_security_user_password))

- name: ras-frontstage-api-ci-deploy
  plan:
  - get: ras-frontstage-api-source
    trigger: true
  - put: cf-resource-ci
    params:
      current_app_name: ras-frontstage-api-ci-migration
      manifest: ras-frontstage-api-source/manifest.yml
      path: ras-frontstage-api-source
      environment_variables:
        DJANGO_CLIENT_ID: 'ons@ons.gov'
        DJANGO_CLIENT_SECRET: 'password'
        EQ_URL: 'https://eq-test/session?token='
        JSON_SECRET_KEYS: ((ci_json_secret_keys))
        RAS_COLLECTION_INSTRUMENT_SERVICE_HOST: 'ras-collection-instrument-ci-migration.apps.devtest.onsclofo.uk'
        RAS_COLLECTION_INSTRUMENT_SERVICE_PORT: '80'
        RAS_OAUTH_SERVICE_HOST: 'django-oauth2-test-ci-migration.apps.devtest.onsclofo.uk'
        RAS_OAUTH_SERVICE_PORT: '80'
        RAS_PARTY_SERVICE_HOST: 'ras-party-ci-migration.apps.devtest.onsclofo.uk'
        RAS_PARTY_SERVICE_PORT: '80'
        RAS_SECURE_MESSAGE_SERVICE_HOST: 'ras-secure-message-ci-migration.apps.devtest.onsclofo.uk'
        RAS_SECURE_MESSAGE_SERVICE_PORT: '80'
        RM_CASE_SERVICE_HOST: 'rm-case-service-ci-migration.apps.devtest.onsclofo.uk'
        RM_CASE_SERVICE_PORT: '80'
        RM_COLLECTION_EXERCISE_SERVICE_HOST: 'rm-collection-exercise-service-ci-migration.apps.devtest.onsclofo.uk'
        RM_COLLECTION_EXERCISE_SERVICE_PORT: '80'
        RM_IAC_SERVICE_HOST: 'iac-service-ci-migration.apps.devtest.onsclofo.uk'
        RM_IAC_SERVICE_PORT: '80'
        RM_SURVEY_SERVICE_HOST: 'rm-survey-service-ci-migration.apps.devtest.onsclofo.uk'
        RM_SURVEY_SERVICE_PORT: '80'
        SECURITY_USER_NAME: ((ci_security_user_name))
        SECURITY_USER_PASSWORD: ((ci_security_user_password))

- name: django-oauth2-test-ci-deploy
  plan:
  - get: django-oauth2-test-source
    trigger: true
  - put: create-database
    resource: cf-cli-resource-ci
    params:
      command: create-service
      service: rds
      plan: shared-psql
      service_instance: oauth-db
      timeout: 300
      wait_for_service: true
  # Create git_info file for info end point
  - task: git-info
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: paasmule/curl-ssl-git
          tag: "latest"
      inputs:
        - name: django-oauth2-test-source
      outputs:
        - name: django-oauth2-test-source-git-info
      run:
        path: sh
        args:
        - -exc
        - |
          cd django-oauth2-test-source
          branch=$(git rev-parse --abbrev-ref HEAD)
          url=$(git config --get remote.origin.url)
          commit=$(git rev-parse HEAD)
          repo=$(basename `git rev-parse --show-toplevel`)
          when=`date --utc +%FT%TZ`
          output=git_info
          echo '{' > ${output}
          echo   \"origin\": \"${url}\", >> ${output}
          echo   \"commit\": \"${commit}\", >> ${output}
          echo   \"branch\": \"${branch}\", >> ${output}
          echo   \"name\": \"${repo}\", >> ${output}
          echo   \"built\": \"${when}\" >> ${output}
          echo '}' >> ${output}
          cd ..
          cp -r django-oauth2-test-source/* django-oauth2-test-source-git-info
  - put: cf-resource-ci
    params:
      current_app_name: django-oauth2-test-ci-migration
      manifest: django-oauth2-test-source-git-info/manifest.yml
      path: django-oauth2-test-source-git-info
      environment_variables:
        CSRF_ENABLED: 'True'
        DEBUG: 'False'
        DJANGO_SETTINGS_MODULE: 'proj.settings.cloud_foundry_settings'
        OAUTH2_SUPER_USER: ((ci_oauth2_super_user))
        OAUTH2_SUPER_USER_EMAIL: ((ci_oauth2_super_user_email))
        OAUTH2_SUPER_USER_PASSWORD: ((ci_oauth2_super_user_password))
        SECRET_KEY: ((ci_jwt_secret))
        TESTING: 'False'
        SECURITY_USER_NAME: ((ci_security_user_name))
        SECURITY_USER_PASSWORD: ((ci_security_user_password))

- name: response-operations-ui-ci-deploy
  plan:
  - get: response-operations-ui-source
    trigger: true
  - put: create-redis
    resource: cf-cli-resource-ci
    params:
      command: create-service
      service: elasticache-broker
      plan: small
      service_instance: ras-redis
      timeout: 600
      wait_for_service: true
  - put: cf-resource-ci
    params:
      current_app_name: response-operations-ui-ci-migration
      manifest: response-operations-ui-source/manifest.yml
      path: response-operations-ui-source
      environment_variables:
        BACKSTAGE_API_URL: 'http://ras-backstage-ci-migration.apps.devtest.onsclofo.uk/backstage-api'
        REDIS_SERVICE: ras-redis

- name: rm-action-service-ci-deploy
  plan:
  - get: rm-action-service-source
    trigger: true
  - put: create-database
    resource: cf-cli-resource-ci
    params:
      command: create-service
      service: rds
      plan: shared-psql
      service_instance: rm-pg-db
      timeout: 300
      wait_for_service: true
  - put: create-redis
    resource: cf-cli-resource-ci
    params:
      command: create-service
      service: elasticache-broker
      plan: small
      service_instance: rm-redis
      timeout: 600
      wait_for_service: true
  - put: create-rabbitmq
    resource: cf-cli-resource-ci
    params:
      command: create-service
      service: rabbitmq
      plan: standard
      service_instance: rm-rabbitmq
      timeout: 300
      wait_for_service: true
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: maven
          tag: 3.3.9-jdk-8
      inputs:
        - name: rm-action-service-source
      outputs:
        - name: target
          path: target
      run:
        path: sh
        args:
        - -exc
        - |
          mvn --settings rm-action-service-source/.maven.settings.xml install -Ddockerfile.skip -f rm-action-service-source/pom.xml
          cp -r rm-action-service-source/target/ .
  - put: cf-resource-ci
    params:
      current_app_name: rm-action-service-ci-migration
      manifest: rm-action-service-source/manifest-no-envs.yml
      path: target/actionsvc.jar
      environment_variables:
        partySvc_connectionConfig_host: 'ras-party-ci-migration.apps.devtest.onsclofo.uk'
        partySvc_connectionConfig_port: '80'
        partySvc_connectionConfig_scheme: 'http'
        partySvc_connectionConfig_username: ((ci_security_user_name))
        partySvc_connectionConfig_password: ((ci_security_user_password))
        collectionExerciseSvc_connectionConfig_host: 'rm-collection-exercise-service-ci-migration.apps.devtest.onsclofo.uk'
        collectionExerciseSvc_connectionConfig_port: '80'
        collectionExerciseSvc_connectionConfig_scheme: 'http'
        collectionExerciseSvc_connectionConfig_username: ((ci_security_user_name))
        collectionExerciseSvc_connectionConfig_password: ((ci_security_user_password))
        caseSvc_connectionConfig_host: 'rm-case-service-ci-migration.apps.devtest.onsclofo.uk'
        caseSvc_connectionConfig_port: '80'
        caseSvc_connectionConfig_scheme: 'http'
        caseSvc_connectionConfig_username: ((ci_security_user_name))
        caseSvc_connectionConfig_password: ((ci_security_user_password))
        surveySvc_connectionConfig_host: 'rm-survey-service-ci-migration.apps.devtest.onsclofo.uk'
        surveySvc_connectionConfig_port: '80'
        surveySvc_connectionConfig_scheme: 'http'
        surveySvc_connectionConfig_username: ((ci_security_user_name))
        surveySvc_connectionConfig_password: ((ci_security_user_password))
        endpoints_enabled: 'false'
        security_user_name: ((ci_security_user_name))
        security_user_password: ((ci_security_user_password))

- name: rm-actionexporter-service-ci-deploy
  plan:
  - get: rm-actionexporter-service-source
    trigger: true
  - put: create-database
    resource: cf-cli-resource-ci
    params:
      command: create-service
      service: rds
      plan: shared-psql
      service_instance: rm-pg-db
      timeout: 300
      wait_for_service: true
  - put: create-redis
    resource: cf-cli-resource-ci
    params:
      command: create-service
      service: elasticache-broker
      plan: small
      service_instance: rm-redis
      timeout: 600
      wait_for_service: true
  - put: create-rabbitmq
    resource: cf-cli-resource-ci
    params:
      command: create-service
      service: rabbitmq
      plan: standard
      service_instance: rm-rabbitmq
      timeout: 300
      wait_for_service: true
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: maven
          tag: 3.3.9-jdk-8
      inputs:
        - name: rm-actionexporter-service-source
      outputs:
        - name: target
          path: target
      run:
        path: sh
        args:
        - -exc
        - |
          mvn --settings rm-actionexporter-service-source/.maven.settings.xml install -Ddockerfile.skip -f rm-actionexporter-service-source/pom.xml
          cp -r rm-actionexporter-service-source/target/ .
  - put: cf-resource-ci
    params:
      current_app_name: rm-actionexporter-service-ci-migration
      manifest: rm-actionexporter-service-source/manifest.yml
      path: target/actionexportersvc.jar
      environment_variables:
        endpoints_enabled: 'false'
        exportSchedule_cronExpression: '0 * * * * ?'
        security_user_name: ((ci_security_user_name))
        security_user_password: ((ci_security_user_password))
        sftp_host: ((sftp_host))
        sftp_password: ((actionexporter_sftp_password))
        sftp_port: '22'
        sftp_username: ((actionexporter_sftp_username))

- name: rm-case-service-ci-deploy
  plan:
  - get: rm-case-service-source
    trigger: true
  - put: create-database
    resource: cf-cli-resource-ci
    params:
      command: create-service
      service: rds
      plan: shared-psql
      service_instance: rm-pg-db
      timeout: 300
      wait_for_service: true
  - put: create-redis
    resource: cf-cli-resource-ci
    params:
      command: create-service
      service: elasticache-broker
      plan: small
      service_instance: rm-redis
      timeout: 600
      wait_for_service: true
  - put: create-rabbitmq
    resource: cf-cli-resource-ci
    params:
      command: create-service
      service: rabbitmq
      plan: standard
      service_instance: rm-rabbitmq
      timeout: 300
      wait_for_service: true
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: maven
          tag: 3.3.9-jdk-8
      inputs:
        - name: rm-case-service-source
      outputs:
        - name: target
          path: target
      run:
        path: sh
        args:
        - -exc
        - |
          mvn --settings rm-case-service-source/.travis.settings.xml install -Ddockerfile.skip -f rm-case-service-source/pom.xml
          cp -r rm-case-service-source/target/ .
  - put: cf-resource-ci
    params:
      current_app_name: rm-case-service-ci-migration
      manifest: rm-case-service-source/manifest-no-envs.yml
      path: target/casesvc.jar
      environment_variables:
        actionSvc_connectionConfig_host: 'rm-action-service-ci-migration.apps.devtest.onsclofo.uk'
        actionSvc_connectionConfig_password: ((ci_security_user_password))
        actionSvc_connectionConfig_port: '80'
        actionSvc_connectionConfig_scheme: 'http'
        actionSvc_connectionConfig_username: ((ci_security_user_name))
        collectionExerciseSvc_connectionConfig_host: 'rm-collection-exercise-service-ci-migration.apps.devtest.onsclofo.uk'
        collectionExerciseSvc_connectionConfig_password: ((ci_security_user_password))
        collectionExerciseSvc_connectionConfig_port: '80'
        collectionExerciseSvc_connectionConfig_scheme: 'http'
        collectionExerciseSvc_connectionConfig_username: ((ci_security_user_name))
        endpoints_enabled: 'false'
        internetAccessCodeSvc_connectionConfig_host: 'iac-service-ci-migration.apps.devtest.onsclofo.uk'
        internetAccessCodeSvc_connectionConfig_password: ((ci_security_user_password))
        internetAccessCodeSvc_connectionConfig_port: '80'
        internetAccessCodeSvc_connectionConfig_scheme: 'http'
        internetAccessCodeSvc_connectionConfig_username: ((ci_security_user_name))
        security_user_name: ((ci_security_user_name))
        security_user_password: ((ci_security_user_password))

- name: rm-collection-exercise-ci-deploy
  plan:
  - get: rm-collection-exercise-service-source
    trigger: true
  - put: create-database
    resource: cf-cli-resource-ci
    params:
      command: create-service
      service: rds
      plan: shared-psql
      service_instance: rm-pg-db
      timeout: 300
      wait_for_service: true
  - put: create-redis
    resource: cf-cli-resource-ci
    params:
      command: create-service
      service: elasticache-broker
      plan: small
      service_instance: rm-redis
      timeout: 600
      wait_for_service: true
  - put: create-rabbitmq
    resource: cf-cli-resource-ci
    params:
      command: create-service
      service: rabbitmq
      plan: standard
      service_instance: rm-rabbitmq
      timeout: 300
      wait_for_service: true
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: maven
          tag: 3.3.9-jdk-8
      inputs:
        - name: rm-collection-exercise-service-source
      outputs:
        - name: target
          path: target
      run:
        path: sh
        args:
        - -exc
        - |
          mvn --settings rm-collection-exercise-service-source/.maven.settings.xml install -Ddockerfile.skip -f rm-collection-exercise-service-source/pom.xml
          cp -r rm-collection-exercise-service-source/target/ .
  - put: cf-resource-ci
    params:
      current_app_name: rm-collection-exercise-service-ci-migration
      manifest: rm-collection-exercise-service-source/manifest-no-envs.yml
      path: target/collectionexercisesvc.jar
      environment_variables:
        collectionInstrumentSvc_connectionConfig_host: 'ras-collection-instrument-ci-migration.apps.devtest.onsclofo.uk'
        collectionInstrumentSvc_connectionConfig_password: ((ci_security_user_password))
        collectionInstrumentSvc_connectionConfig_port: '80'
        collectionInstrumentSvc_connectionConfig_scheme: 'http'
        collectionInstrumentSvc_connectionConfig_username: ((ci_security_user_name))
        endpoints_enabled: 'false'
        partySvc_connectionConfig_host: 'ras-party-ci-migration.apps.devtest.onsclofo.uk'
        partySvc_connectionConfig_password: ((ci_security_user_password))
        partySvc_connectionConfig_port: '80'
        partySvc_connectionConfig_scheme: 'http'
        partySvc_connectionConfig_username: ((ci_security_user_name))
        sampleSvc_connectionConfig_host: 'rm-sample-service-ci-migration.apps.devtest.onsclofo.uk'
        sampleSvc_connectionConfig_password: ((ci_security_user_password))
        sampleSvc_connectionConfig_port: '80'
        sampleSvc_connectionConfig_scheme: 'http'
        sampleSvc_connectionConfig_username: ((ci_security_user_name))
        security_user_name: ((ci_security_user_name))
        security_user_password: ((ci_security_user_password))
        surveySvc_connectionConfig_host: concourse-rm-survey-service-dev.apps.devtest.onsclofo.uk
        surveySvc_connectionConfig_password: ((ci_security_user_password))
        surveySvc_connectionConfig_port: '80'
        surveySvc_connectionConfig_scheme: 'http'
        surveySvc_connectionConfig_username: ((ci_security_user_name))
        SCHEDULES_VALIDATION_SCHEDULE_DELAY_MILLI_SECONDS: '1000'
        SCHEDULES_DISTRIBUTION_SCHEDULE_DELAY_MILLI_SECONDS: '1000'
