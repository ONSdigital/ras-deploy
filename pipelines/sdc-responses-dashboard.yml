---
resource_types:
- name: cf-cli-resource
  type: docker-image
  source:
    repository: nulldriver/cf-cli-resource
    tag: latest

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

resources:
- name: sdc-responses-dashboard-source
  type: git
  source:
    uri: https://github.com/ONSdigital/sdc-responses-dashboard.git

- name: ras-deploy
  type: git
  source:
    uri: https://github.com/ONSdigital/ras-deploy.git
    branch: master

- name: sdc-responses-dashboard-release
  type: github-release
  source:
    owner: ONSdigital
    repository: sdc-responses-dashboard
    access_token: ((github_access_token))

- name: sdc-responses-dashboard-pre-release
  type: github-release
  source:
    owner: ONSdigital
    repository: sdc-responses-dashboard
    access_token: ((github_access_token))
    release: false
    pre_release: true

- name: cf-resource-latest
  type: cf
  source:
    api: ((cloudfoundry_api))
    username: ((cloudfoundry_email))
    password: ((cloudfoundry_password))
    organization: rmras
    space: concourse-latest
    skip_cert_check: true

- name: cf-resource-preprod
  type: cf
  source:
    api: ((preprod_cloudfoundry_api))
    username: ((preprod_cloudfoundry_email))
    password: ((preprod_cloudfoundry_password))
    organization: rmras
    space: preprod
    skip_cert_check: true

- name: cf-cli-resource-preprod
  type: cf-cli-resource
  source:
    api: ((preprod_cloudfoundry_api))
    username: ((preprod_cloudfoundry_email))
    password: ((preprod_cloudfoundry_password))
    org: rmras
    space: preprod
    skip_cert_check: true

- name: cf-resource-prod
  type: cf
  source:
    api: ((prod_cloudfoundry_api))
    username: ((prod_cloudfoundry_email))
    password: ((prod_cloudfoundry_password))
    organization: rmras
    space: prod
    skip_cert_check: true

- name: cf-cli-resource-prod
  type: cf-cli-resource
  source:
    api: ((prod_cloudfoundry_api))
    username: ((prod_cloudfoundry_email))
    password: ((prod_cloudfoundry_password))
    org: rmras
    space: prod
    skip_cert_check: true

- name: notify
  type: slack-notification
  source:
    url: ((slack_webhook))

jobs:
- name: sdc-responses-dashboard-latest-deploy
  serial: true
  plan:
  - get: sdc-responses-dashboard-source
    trigger: true
  - get: ras-deploy
  - task: run-yarn-compile
    file: sdc-responses-dashboard-source/yarn-compile-task.yml
  - task: run-unit-tests
    file: ras-deploy/tasks/python-unit-tests.yml
    input_mapping: { repository-name: compiled-sdc-responses-dashboard-source }
  - put: push-app
    resource: cf-resource-latest
    params:
      current_app_name: sdc-responses-dashboard-latest
      manifest: compiled-sdc-responses-dashboard-source/manifest.yml
      path: compiled-sdc-responses-dashboard-source
      environment_variables:
        HOST: 0.0.0.0
        LOGGING_LEVEL: DEBUG
        REPORTING_REFRESH_CYCLE_IN_SECONDS: "60"
        COLLECTION_EXERCISE_URL: http://rm-collection-exercise-service-concourse-latest.apps.devtest.onsclofo.uk
        SURVEY_URL: http://rm-survey-service-concourse-latest.apps.devtest.onsclofo.uk
        REPORTING_URL: http://rm-reporting.apps.devtest.onsclofo.uk
        AUTH_USERNAME: ((latest_security_user_name))
        AUTH_PASSWORD: ((latest_security_user_password))
  on_failure:
    put: notify
    params:
      text:  |
        Devtest Latest space responses-dashboard deploy failed. See build:
        $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: sdc-responses-dashboard-preprod-pre-release-deploy
  serial: true
  serial_groups: [preprod_deploys]
  plan:
  - get: sdc-responses-dashboard-pre-release
    trigger: true
    params:
      include_source_tarball: true
  - get: ras-deploy
  - task: extract-source-from-release-tarball
    file: ras-deploy/tasks/extract-source-from-release.yml
    input_mapping: { release-resource: sdc-responses-dashboard-pre-release }
    output_mapping: { release-source: sdc-responses-dashboard-release-source }
  - task: run-yarn-compile
    file: sdc-responses-dashboard-release-source/yarn-compile-task.yml
    input_mapping: { sdc-responses-dashboard-source: sdc-responses-dashboard-release-source }
  - put: push-app
    resource: cf-resource-preprod
    params:
      current_app_name: sdc-responses-dashboard-preprod
      manifest: compiled-sdc-responses-dashboard-source/manifest.yml
      path: compiled-sdc-responses-dashboard-source
      environment_variables:
        HOST: 0.0.0.0
        LOGGING_LEVEL: DEBUG
        REPORTING_REFRESH_CYCLE_IN_SECONDS: "600"
        COLLECTION_EXERCISE_URL: http://collectionexercisesvc-preprod.((preprod_cloudfoundry_apps_domain))
        SURVEY_URL: http://surveysvc-preprod.((preprod_cloudfoundry_apps_domain))
        REPORTING_URL: http://rm-reporting-preprod.((preprod_cloudfoundry_apps_domain))
        AUTH_USERNAME: ((preprod_security_user_name))
        AUTH_PASSWORD: ((preprod_security_user_password))
  - put: map-route-ons-internal-domain
    resource: cf-cli-resource-preprod
    params:
      command: map-route
      app_name: sdc-responses-dashboard-preprod
      domain: ((preprod_internal_domain))
      path: dashboard
  - put: map-route-ons-vpn-domain
    resource: cf-cli-resource-preprod
    params:
      command: map-route
      app_name: sdc-responses-dashboard-preprod
      domain: ((preprod_vpn_domain))
      path: dashboard
  on_failure:
    put: notify
    params:
      text:  |
        Preprod responses-dashboard deploy failed. See build:
        $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: sdc-responses-dashboard-preprod-deploy
  serial: true
  serial_groups: [preprod_deploys]
  plan:
  - get: sdc-responses-dashboard-release
    trigger: true
    params:
      include_source_tarball: true
  - get: ras-deploy
  - task: extract-source-from-release-tarball
    file: ras-deploy/tasks/extract-source-from-release.yml
    input_mapping: { release-resource: sdc-responses-dashboard-release }
    output_mapping: { release-source: sdc-responses-dashboard-release-source }
  - task: run-yarn-compile
    file: sdc-responses-dashboard-release-source/yarn-compile-task.yml
    input_mapping: { sdc-responses-dashboard-source: sdc-responses-dashboard-release-source }
  - put: push-app
    resource: cf-resource-preprod
    params:
      current_app_name: sdc-responses-dashboard-preprod
      manifest: compiled-sdc-responses-dashboard-source/manifest.yml
      path: compiled-sdc-responses-dashboard-source
      environment_variables:
        HOST: 0.0.0.0
        LOGGING_LEVEL: DEBUG
        REPORTING_REFRESH_CYCLE_IN_SECONDS: "600"
        COLLECTION_EXERCISE_URL: http://collectionexercisesvc-preprod.((preprod_cloudfoundry_apps_domain))
        SURVEY_URL: http://surveysvc-preprod.((preprod_cloudfoundry_apps_domain))
        REPORTING_URL: http://rm-reporting-preprod.((preprod_cloudfoundry_apps_domain))
        AUTH_USERNAME: ((preprod_security_user_name))
        AUTH_PASSWORD: ((preprod_security_user_password))
  - put: map-route-ons-internal-domain
    resource: cf-cli-resource-preprod
    params:
      command: map-route
      app_name: sdc-responses-dashboard-preprod
      domain: ((preprod_internal_domain))
      path: dashboard
  - put: map-route-ons-vpn-domain
    resource: cf-cli-resource-preprod
    params:
      command: map-route
      app_name: sdc-responses-dashboard-preprod
      domain: ((preprod_vpn_domain))
      path: dashboard
  on_failure:
    put: notify
    params:
      text:  |
        Preprod responses-dashboard deploy failed. See build:
        $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: sdc-responses-dashboard-prod-deploy
  serial: true
  plan:
  - get: sdc-responses-dashboard-release
    passed: [sdc-responses-dashboard-preprod-deploy]
    trigger: true
    params:
      include_source_tarball: true
  - get: ras-deploy
  - task: extract-source-from-release-tarball
    file: ras-deploy/tasks/extract-source-from-release.yml
    input_mapping: { release-resource: sdc-responses-dashboard-release }
    output_mapping: { release-source: sdc-responses-dashboard-release-source }
  - task: run-yarn-compile
    file: sdc-responses-dashboard-source/yarn-compile-task.yml
    input_mapping: { sdc-responses-dashboard-source: sdc-responses-dashboard-release-source }
  - put: push-app
    resource: cf-resource-prod
    params:
      current_app_name: sdc-responses-dashboard-prod
      manifest: compiled-sdc-responses-dashboard-source/manifest.yml
      path: compiled-sdc-responses-dashboard-source
      environment_variables:
        HOST: 0.0.0.0
        LOGGING_LEVEL: DEBUG
        REPORTING_REFRESH_CYCLE_IN_SECONDS: "600"
        COLLECTION_EXERCISE_URL: http://collectionexercisesvc-prod.((prod_cloudfoundry_apps_domain))
        SURVEY_URL: http://surveysvc-prod.((prod_cloudfoundry_apps_domain))
        REPORTING_URL: http://rm-reporting-prod.((prod_cloudfoundry_apps_domain))
        AUTH_USERNAME: ((prod_security_user_name))
        AUTH_PASSWORD: ((prod_security_user_password))
  - put: map-route-ons-internal-domain
    resource: cf-cli-resource-prod
    params:
      command: map-route
      app_name: sdc-responses-dashboard-prod
      domain: ((prod_internal_domain))
      path: dashboard
  - put: map-route-ons-vpn-domain
    resource: cf-cli-resource-prod
    params:
      command: map-route
      app_name: sdc-responses-dashboard-prod
      domain: ((prod_vpn_domain))
      path: dashboard
  on_failure:
    put: notify
    params:
      text:  |
        Production responses-dashboard deploy failed. See build:
        $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
